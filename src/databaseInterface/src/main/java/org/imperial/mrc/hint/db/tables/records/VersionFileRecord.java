/*
 * This file is generated by jOOQ.
 */
package org.imperial.mrc.hint.db.tables.records;


import org.imperial.mrc.hint.db.tables.VersionFile;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionFileRecord extends UpdatableRecordImpl<VersionFileRecord> implements Record5<String, String, String, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.version_file.version</code>.
     */
    public void setVersion(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.version_file.version</code>.
     */
    public String getVersion() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.version_file.hash</code>.
     */
    public void setHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.version_file.hash</code>.
     */
    public String getHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.version_file.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.version_file.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.version_file.filename</code>.
     */
    public void setFilename(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.version_file.filename</code>.
     */
    public String getFilename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.version_file.from_adr</code>.
     */
    public void setFromAdr(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.version_file.from_adr</code>.
     */
    public Boolean getFromAdr() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, String, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return VersionFile.VERSION_FILE.VERSION;
    }

    @Override
    public Field<String> field2() {
        return VersionFile.VERSION_FILE.HASH;
    }

    @Override
    public Field<String> field3() {
        return VersionFile.VERSION_FILE.TYPE;
    }

    @Override
    public Field<String> field4() {
        return VersionFile.VERSION_FILE.FILENAME;
    }

    @Override
    public Field<Boolean> field5() {
        return VersionFile.VERSION_FILE.FROM_ADR;
    }

    @Override
    public String component1() {
        return getVersion();
    }

    @Override
    public String component2() {
        return getHash();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getFilename();
    }

    @Override
    public Boolean component5() {
        return getFromAdr();
    }

    @Override
    public String value1() {
        return getVersion();
    }

    @Override
    public String value2() {
        return getHash();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getFilename();
    }

    @Override
    public Boolean value5() {
        return getFromAdr();
    }

    @Override
    public VersionFileRecord value1(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public VersionFileRecord value2(String value) {
        setHash(value);
        return this;
    }

    @Override
    public VersionFileRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public VersionFileRecord value4(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public VersionFileRecord value5(Boolean value) {
        setFromAdr(value);
        return this;
    }

    @Override
    public VersionFileRecord values(String value1, String value2, String value3, String value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VersionFileRecord
     */
    public VersionFileRecord() {
        super(VersionFile.VERSION_FILE);
    }

    /**
     * Create a detached, initialised VersionFileRecord
     */
    public VersionFileRecord(String version, String hash, String type, String filename, Boolean fromAdr) {
        super(VersionFile.VERSION_FILE);

        setVersion(version);
        setHash(hash);
        setType(type);
        setFilename(filename);
        setFromAdr(fromAdr);
    }
}
