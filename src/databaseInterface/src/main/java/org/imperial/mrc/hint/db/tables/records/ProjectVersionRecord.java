/*
 * This file is generated by jOOQ.
 */
package org.imperial.mrc.hint.db.tables.records;


import java.time.LocalDateTime;

import org.imperial.mrc.hint.db.tables.ProjectVersion;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectVersionRecord extends UpdatableRecordImpl<ProjectVersionRecord> implements Record8<String, Integer, String, String, LocalDateTime, LocalDateTime, Boolean, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.project_version.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.project_version.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.project_version.project_id</code>.
     */
    public void setProjectId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.project_version.project_id</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.project_version.state</code>.
     */
    public void setState(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.project_version.state</code>.
     */
    public String getState() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.project_version.note</code>.
     */
    public void setNote(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.project_version.note</code>.
     */
    public String getNote() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.project_version.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.project_version.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.project_version.updated</code>.
     */
    public void setUpdated(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.project_version.updated</code>.
     */
    public LocalDateTime getUpdated() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.project_version.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.project_version.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.project_version.version_number</code>.
     */
    public void setVersionNumber(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.project_version.version_number</code>.
     */
    public Integer getVersionNumber() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, Integer, String, String, LocalDateTime, LocalDateTime, Boolean, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, Integer, String, String, LocalDateTime, LocalDateTime, Boolean, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ProjectVersion.PROJECT_VERSION.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ProjectVersion.PROJECT_VERSION.PROJECT_ID;
    }

    @Override
    public Field<String> field3() {
        return ProjectVersion.PROJECT_VERSION.STATE;
    }

    @Override
    public Field<String> field4() {
        return ProjectVersion.PROJECT_VERSION.NOTE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ProjectVersion.PROJECT_VERSION.CREATED;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return ProjectVersion.PROJECT_VERSION.UPDATED;
    }

    @Override
    public Field<Boolean> field7() {
        return ProjectVersion.PROJECT_VERSION.DELETED;
    }

    @Override
    public Field<Integer> field8() {
        return ProjectVersion.PROJECT_VERSION.VERSION_NUMBER;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getProjectId();
    }

    @Override
    public String component3() {
        return getState();
    }

    @Override
    public String component4() {
        return getNote();
    }

    @Override
    public LocalDateTime component5() {
        return getCreated();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdated();
    }

    @Override
    public Boolean component7() {
        return getDeleted();
    }

    @Override
    public Integer component8() {
        return getVersionNumber();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getProjectId();
    }

    @Override
    public String value3() {
        return getState();
    }

    @Override
    public String value4() {
        return getNote();
    }

    @Override
    public LocalDateTime value5() {
        return getCreated();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdated();
    }

    @Override
    public Boolean value7() {
        return getDeleted();
    }

    @Override
    public Integer value8() {
        return getVersionNumber();
    }

    @Override
    public ProjectVersionRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value2(Integer value) {
        setProjectId(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value3(String value) {
        setState(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value4(String value) {
        setNote(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value5(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value6(LocalDateTime value) {
        setUpdated(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value7(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public ProjectVersionRecord value8(Integer value) {
        setVersionNumber(value);
        return this;
    }

    @Override
    public ProjectVersionRecord values(String value1, Integer value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6, Boolean value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectVersionRecord
     */
    public ProjectVersionRecord() {
        super(ProjectVersion.PROJECT_VERSION);
    }

    /**
     * Create a detached, initialised ProjectVersionRecord
     */
    public ProjectVersionRecord(String id, Integer projectId, String state, String note, LocalDateTime created, LocalDateTime updated, Boolean deleted, Integer versionNumber) {
        super(ProjectVersion.PROJECT_VERSION);

        setId(id);
        setProjectId(projectId);
        setState(state);
        setNote(note);
        setCreated(created);
        setUpdated(updated);
        setDeleted(deleted);
        setVersionNumber(versionNumber);
    }
}
