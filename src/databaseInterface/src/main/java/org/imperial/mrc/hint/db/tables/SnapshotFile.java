/*
 * This file is generated by jOOQ.
*/
package org.imperial.mrc.hint.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.imperial.mrc.hint.db.Indexes;
import org.imperial.mrc.hint.db.Keys;
import org.imperial.mrc.hint.db.Public;
import org.imperial.mrc.hint.db.tables.records.SnapshotFileRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SnapshotFile extends TableImpl<SnapshotFileRecord> {

    private static final long serialVersionUID = 605760824;

    /**
     * The reference instance of <code>public.snapshot_file</code>
     */
    public static final SnapshotFile SNAPSHOT_FILE = new SnapshotFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SnapshotFileRecord> getRecordType() {
        return SnapshotFileRecord.class;
    }

    /**
     * The column <code>public.snapshot_file.snapshot</code>.
     */
    public final TableField<SnapshotFileRecord, String> SNAPSHOT = createField("snapshot", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.snapshot_file.hash</code>.
     */
    public final TableField<SnapshotFileRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.snapshot_file.type</code>.
     */
    public final TableField<SnapshotFileRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.snapshot_file.filename</code>.
     */
    public final TableField<SnapshotFileRecord, String> FILENAME = createField("filename", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>public.snapshot_file</code> table reference
     */
    public SnapshotFile() {
        this(DSL.name("snapshot_file"), null);
    }

    /**
     * Create an aliased <code>public.snapshot_file</code> table reference
     */
    public SnapshotFile(String alias) {
        this(DSL.name(alias), SNAPSHOT_FILE);
    }

    /**
     * Create an aliased <code>public.snapshot_file</code> table reference
     */
    public SnapshotFile(Name alias) {
        this(alias, SNAPSHOT_FILE);
    }

    private SnapshotFile(Name alias, Table<SnapshotFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private SnapshotFile(Name alias, Table<SnapshotFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SNAPSHOT_FILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SnapshotFileRecord> getPrimaryKey() {
        return Keys.SNAPSHOT_FILE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SnapshotFileRecord>> getKeys() {
        return Arrays.<UniqueKey<SnapshotFileRecord>>asList(Keys.SNAPSHOT_FILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SnapshotFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SnapshotFileRecord, ?>>asList(Keys.SNAPSHOT_FILE__SNAPSHOT_FILE_SNAPSHOT_FKEY, Keys.SNAPSHOT_FILE__SNAPSHOT_FILE_HASH_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotFile as(String alias) {
        return new SnapshotFile(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SnapshotFile as(Name alias) {
        return new SnapshotFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SnapshotFile rename(String name) {
        return new SnapshotFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SnapshotFile rename(Name name) {
        return new SnapshotFile(name, null);
    }
}
