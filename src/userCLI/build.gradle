buildscript {
    ext.kotlin_version = '1.3.30'
    repositories {
        // This is needed for gradle-docker
        jcenter()
    }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

apply plugin: 'application'
apply plugin: 'docker'
mainClassName = "org.imperial.mrc.hint.userCLI.AppKt"

dependencies {
    implementation project(":app")
    implementation "com.offbytwo:docopt:0.6.0.20150202"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    implementation 'org.springframework:spring-tx:5.1.8.RELEASE'
    implementation "org.slf4j:slf4j-nop:1.7.26"
    implementation "org.pac4j:pac4j-core:3.7.0"
    implementation 'org.pac4j:pac4j-jwt:3.7.0'
    implementation 'org.pac4j:pac4j-sql:3.3.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.assertj:assertj-core:3.6.2"
    testImplementation "org.mockito:mockito-core:2.+"
    testImplementation "com.nhaarman:mockito-kotlin:1.3.0"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

def cli_docker_version = 'UNKNOWN'
if (hasProperty('docker_version')) {
    cli_docker_version = docker_version
}
def cli_docker_name = 'mrcide/hint-user-cli'
if (hasProperty('docker_name')) {
    cli_docker_name = docker_name
}

distDocker {
    baseImage = "openjdk:8u121-jre"
    dependsOn = [build]
    push = false
    tag = cli_docker_name
    tagVersion = cli_docker_version
}


