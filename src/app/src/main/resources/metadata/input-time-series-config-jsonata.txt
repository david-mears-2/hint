(
$dataByArea := data {`area_name`: $};
$areaNames := $keys($dataByArea);

$lineColor := "rgb(51, 51, 51)";
$highlightColor := "rgb(255, 51, 51)";
$colorscale := [[0, $lineColor], [0, $highlightColor]];
$subplotHeight := 1/subplots.rows * 0.6;
$timePeriods := $sort(data.time_period);
$firstXAxisVal := $timePeriods[0];
$lastXAxisVal := $timePeriods[$count(timePeriods) - 1];

{
    "data":
        $map($areaNames, function($v, $i) {(
            $areaData := $lookup($dataByArea, $v);

            /* Check if each successive line should be highlighted - if the difference between a value and its preceding
             value exceeds the threshold. Generate an array of 1s and 0s to indicate highlight or not*/
            $highlightedLines := $map($areaData.value[-1], function($thv, $thi) {
                 ($thv != null)
                 and
                 (
                     ((($areaData.value)[$thi-1] != null) and ($thi > 0) and $thv > (1.25 * ($areaData.value)[$thi-1]))
                     or
                     ((($areaData.value)[$thi-1] != null) and ($thi > 0) and $thv < (0.75 * ($areaData.value)[$thi-1]))
                 )
                 ? 1 : 0
            });

             /* Generate another array for highlighted markers - check each pair of lines, and if either is
              highlighted then the marker should be too */
            $highlighedMarkers := $map( [0..$count($highlightedLines)], function($thi) {
                 (($thi = 0 and $highlightedLines[0] = 1)
                 or
                 ($thi = $count($highlightedLines) and $highlightedLines[$thi-1] = 1)
                 or
                 ($thi > 0 and $thi < $count($highlightedLines) and $highlightedLines[$thi-1] = 1 or $highlightedLines[$thi] = 1))
                 ? 1 : 0
            });

            [
                {
                    "name": $v,
                    "showlegend": false,
                    "x": $areaData.time_period,
                    "y": $areaData.value,
                    "xaxis": 'x' & ($i+1),
                    "yaxis": 'y' & ($i+1),
                    "type": "scatter",
                    "line": {
                        "color": $highlightedLines,
                        "colorscale": $colorscale
                    },
                    "marker": {
                        "color": $highlightedMarkers,
                        "colorscale": $colorscale
                    }
                }
            ]
        )}
    )[].*,
    "config": {
        "responsive": false,
        "scrollZoom": false,
        "modeBarButtonsToRemove": ['zoom2d', 'pan2d', 'select2d', 'lasso2d', 'autoScale2d', 'resetScale2d', 'zoomIn2d', 'zoomOut2d']
        },
    "layout": $merge([
        {
            "margin": {"t": 32},
            "dragmode": false,
            "grid": {"columns": subplots.columns, "rows": subplots.rows, "pattern": 'independent'},
            "annotations": $map($areaNames, function($v, $i) {
                {
                    "text": $v & " (" & ($lookup($dataByArea,$v).area_id)[0] & ")",
                    "textfont": {},
                    "showarrow": false,
                    "x": 0.5,
                    "xanchor": "middle",
                    "xref": "x" & ($i+1) & " domain",
                    "y": 1.1,
                    "yanchor": "middle",
                    "yref": "y" & ($i+1) & " domain"
                }
            })[]
        },
        [1..$count($areaNames)].(
           $row := $floor($/$$.subplots.columns);
           {
               "yaxis"&$: {
                   "rangemode": "tozero",
                   "zeroline": false,
                   "tickfont": {
                       "color": "grey"
                   },
                   "domain": [
                       1 - ($row/$$.subplots.rows),
                       1 - (($row/$$.subplots.rows) + $subplotHeight)
                   ]
               },
               "xaxis"&$: {
                   "zeroline": false,
                   "tickvals": [$firstXAxisVal, $lastXAxisVal],
                    "tickfont": {
                        "color": "grey"
                    }
               }
           }
        )
    ])
})
