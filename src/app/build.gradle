buildscript {
	ext.kotlin_version = '1.3.30'
}

apply plugin: 'application'

mainClassName = "org.imperial.mrc.hint.AppStartKt"

jacoco {
	toolVersion = "0.8.3"
	reportsDir = file("$projectDir/coverage")
}

jacocoTestReport {
	reports {
		xml.enabled = true
		csv.enabled = false
	}

	afterEvaluate {
		classDirectories = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: '**/APIClient.kt')
		})
	}
}

group = 'org.imperial.mrc'
sourceCompatibility = '1.8'

dependencies {

	implementation 'com.github.kittinunf.fuel:fuel:2.1.0'
	implementation 'com.github.kittinunf.fuel:fuel-json:2.1.0'
	implementation 'com.github.kittinunf.fuel:fuel-coroutines:2.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
	implementation "org.jooq:jooq:3.10.5"
	implementation 'org.pac4j:spring-webmvc-pac4j:3.2.0'
	implementation 'org.pac4j:pac4j-http:3.3.0'
	implementation 'org.pac4j:pac4j-jwt:3.7.0'
	implementation 'org.pac4j:pac4j-sql:3.3.0'
	implementation 'org.postgresql:postgresql:9.4-1200-jdbc41'
	implementation 'org.mindrot:jbcrypt:0.4'
	implementation 'com.github.spullara.mustache.java:compiler:0.9.5'
	implementation "org.simplejavamail:simple-java-mail:4.4.5"
	
	compile project(":databaseInterface")
	
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: "com.vaadin.external.google", module:"android-json"
		exclude module: 'junit'
	}
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation "com.nhaarman:mockito-kotlin:1.3.0"
	testImplementation "org.jsoup:jsoup:1.11.3"
	testImplementation "org.xmlmatchers:xml-matchers:0.10"
	testImplementation "net.sourceforge.htmlunit:htmlunit:2.4"
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}


task compileFrontEnd() {
	doLast {
		exec {
			commandLine "npm", "run", "build", "--prefix=$projectDir/static/"
		}
	}
}

//Run bootRun with eg -PspringProfile=prod to run with a different active profile from default 'dev' 
//defined in gradle.properties
bootRun {
	bootRun.systemProperty 'spring.profiles.active', springProfile
}

processResources.dependsOn 'compileFrontEnd'

