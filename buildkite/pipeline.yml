steps:
  - label: ":construction_worker: Make shared build env"
    command: buildkite/make-build-env.sh

  - wait

  - label: ":construction_worker: Build app image"
    command: buildkite/build.sh && buildkite/push.sh

  - label: ":construction_worker::mag: Build and test CLI"
    command: buildkite/build-cli.sh

  - label: ":mag: Test back-end"
    command: buildkite/test.sh

  - label: ":mag: Test ADR integration"
    command: buildkite/test-adr.sh

  - label: ":mag: Test front-end"
    command: buildkite/test-front-end.sh

  - label: ":mag: Test browser e2e"
    command: buildkite/test-browser-e2e.sh

  - label: ":mag: Test front-end ADR Dataset integration"
    command: buildkite/test-adr-front-end-integration.sh

  - wait

  # This makes sure that deploys are triggered in the same order as the
  # test builds, no matter which test builds finish first.
  - label: "Concurrency gate"
    command: "exit 0"
    if: build.branch == 'master'
    concurrency: 1
    concurrency_group: "hint-deploy-concurrency-gate"

  - wait

  - label: ":rocket:"
    trigger: "naomi-staging-deploy"
    if: build.branch == 'master'

